{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","userId","title","completed","classNames","TodoList","todos","map","getUser","usersFromServer","find","todosList","App","useState","setToDos","setTitle","userID","setUserID","titleError","setTitleError","userIDError","setUserIDError","users","action","method","onSubmit","event","preventDefault","trim","toDoID","forEach","item","newToDo","currentTodos","placeholder","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6168432.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    userId,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': completed,\n      },\n    )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo key={userId} user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todosList: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setToDos] = useState(todosList);\n  const [title, setTitle] = useState('');\n  const [userID, setUserID] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userIDError, setUserIDError] = useState(false);\n\n  const users = usersFromServer;\n\n  const resetForm = () => {\n    setTitle('');\n    setUserID(0);\n  };\n\n  const handleAddingToDo = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!title.trim());\n    setUserIDError(!userID);\n\n    let toDoID = 0;\n\n    todos.forEach(item => {\n      if (item.id > toDoID) {\n        toDoID = item.id + 1;\n      }\n    });\n\n    const newToDo = {\n      id: toDoID,\n      userId: userID,\n      title,\n      completed: false,\n      user: getUser(userID),\n    };\n\n    if (title.trim() && userID) {\n      setToDos(currentTodos => [...currentTodos, newToDo]);\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Add todo form</h1>\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddingToDo}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n\n            <input\n              placeholder=\"Enter a title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={(event) => setTitle(event.target.value)}\n            />\n\n            {titleError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              value={userID}\n              onChange={(event) => setUserID(+event.target.value)}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {users.map(user => {\n                return (\n                  <option key={user.id} value={user.id}>{user.name}</option>\n                );\n              })}\n            </select>\n            {userIDError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-ce=\"submitButton\">Add</button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}